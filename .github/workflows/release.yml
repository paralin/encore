name: Docker Publish Test
on: workflow_dispatch
jobs:
  build-and-publish-image:
    name: "publish docker images"
    runs-on: ubuntu-20.04
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3
        with:
          sparse-checkout: .github
      - name: Download and Extract Artifacts
        uses: dawidd6/action-download-artifact@246dbf436b23d7c49e21a7ab8204ca9ecd1fe615
        with:
          run_id: 5256127441
          path: .github/artifacts
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: encoredotdev/encore
          labels: |
            org.opencontainers.image.title=Emissary Server
            org.opencontainers.image.vendor=Encoretivity AB
            org.opencontainers.image.authors=support@encore.dev
            org.opencontainers.image.description=Emissary is a server which is used by the Encore platform to securely tunnel into your cloud environment and is deployed alongside your Encore application
          tags: |
            type=raw,value=latest
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}},enable=${{ !startsWith(github.ref, 'refs/tags/v0.') }}
            type=ref,event=pr

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .github
          file: .github/Release-Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
